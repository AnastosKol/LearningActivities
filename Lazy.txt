***************************************************
					Lazy Anastos
***************************************************



###################################################
						Git
###################################################
1) Set your name and email
§ git config --global user.name "Anastos"
§ git config --global user.email "anastoskol@gmail.com"

2) Check correct settings
§ git config --list

3) Check specific setting
§ git config user.email

4) Add changes of all modified files 
§ git add .

4a) Add changes of a single modified file
§ git add <file.txt>

5) Make a commit (all files)
§ git commit -m "Message"

6) View your commits (history)
§ git log 

6a) § git log --pretty=oneline (One line logs!!)

7) View a specific author's commits
§ git log --author="Name"

8) Get the status of my commits
§ git status

9) Git workfolow
Working directory (Local Computer (Red)) -> Staging area (add (Green)) -> Repository (commit)

10) Compare differencies of the working copy against my repository
§ git diff

11) Compare differencies of the staging area against the repository
§ git diff --staged

12) Remove a file both from git and the folder
§ git rm file.txt

13) Rename a file
§ git mv OldName.txt NewName.txt

14) Commit with skipping the staged area
§ git commit -am

15) Undo changes, Take a file from my repo and make it working copy (Working Copy <- Repo)
§ git checkout -- file.txt

16) Remove a file from the staging area (Unstage)
§ git reset HEAD file.txt

17) Get an old version from the Repo
§ git checkout  <commit number> -- file
e.g., git checkout 035sd24 (first few numbers) -- index.html

18) Make a new branch 
§ git branch <Name>

19) Switch to another branch
§ git checkout <Name of the already existing branch>

20) Check my branches
§ git branch

21) Merging two branches together. Go to the branch you want to merge stuff, use
§ git merge <Name of the other branch>


********************************************************************
GitHub:

1) Add a remote 
§ git remote add <NameIt> <URL>

2) Clone a remote 
§ git clone <URL> <optional folder>
or 
§ git clone <ssh> <optional folder>

3) Push my files to the remote
§ git push -u <NameIt>

4) Push files 
§ git push <NameIt> <Branch>

5) Download changes from the remote
§ git pull